
IF NOT EXISTS (SELECT * FROM [dbo].[AspNetUsers])
BEGIN
	PRINT N'Populating AspNetUsers with a default user'
	--MERGE generated by 'sp_generate_merge' stored procedure

	SET NOCOUNT ON;
	DECLARE @mergeError int, @mergeCount int;

	MERGE INTO [dbo].[AspNetUsers] AS [Target]
	USING (VALUES
	  (N'fda1aaaf-3b8c-4a06-a85b-201717f4b71a',N'admin@contoso.com',1,N'AM6DsPWtSwcxKaC2/Po3ahtcS08aNCpdlWvKial6mIBnULmqqVZDyHO49yvRu8+xOA==',N'b67d0235-e21f-4174-9e62-c4beb000fb9c',NULL,0,0,NULL,1,0,N'admin@contoso.com')
	) AS [Source] ([Id],[Email],[EmailConfirmed],[PasswordHash],[SecurityStamp],[PhoneNumber],[PhoneNumberConfirmed],[TwoFactorEnabled],[LockoutEndDateUtc],[LockoutEnabled],[AccessFailedCount],[UserName])
	ON ([Target].[Id] = [Source].[Id])
	WHEN NOT MATCHED BY TARGET THEN
	 INSERT([Id],[Email],[EmailConfirmed],[PasswordHash],[SecurityStamp],[PhoneNumber],[PhoneNumberConfirmed],[TwoFactorEnabled],[LockoutEndDateUtc],[LockoutEnabled],[AccessFailedCount],[UserName])
	 VALUES([Id],[Email],[EmailConfirmed],[PasswordHash],[SecurityStamp],[PhoneNumber],[PhoneNumberConfirmed],[TwoFactorEnabled],[LockoutEndDateUtc],[LockoutEnabled],[AccessFailedCount],[UserName])
	;

	SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
	IF @mergeError != 0
	BEGIN
		PRINT 'ERROR OCCURRED IN MERGE FOR [AspNetUsers]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
	END
	ELSE
	BEGIN
		PRINT '[AspNetUsers] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
	END
END
GO


SET NOCOUNT OFF
GO